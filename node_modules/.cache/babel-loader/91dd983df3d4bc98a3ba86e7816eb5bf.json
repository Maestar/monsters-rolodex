{"ast":null,"code":"var _jsxFileName = \"/Users/terabenoit/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list-component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  } // componentDidMount: when component is loaded, do thing.\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      searchField: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state; //equivalent to const monsters = this.state.monsters; ect.\n\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(SearchBox //placeholder and handleChange are 'props' and their contents are passed down to the search component\n    , {\n      placeholder: \"search Monsters\",\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/terabenoit/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","state","monsters","searchField","handleChange","bind","componentDidMount","fetch","then","response","json","users","setState","e","target","value","render","filteredMonsters","filter","monster","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAGA,SAAQC,QAAR,QAAuB,4CAAvB;AACA,SAAQC,SAAR,QAAwB,8CAAxB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,WAAW,GAAE;AACX;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD,GAZyB,CAa5B;;;AACEC,EAAAA,iBAAiB,GAAE;AAEjBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACV,MAAAA,QAAQ,EAAES;AAAX,KAAd,CAFf;AAID;;AAEDP,EAAAA,YAAY,CAACS,CAAD,EAAG;AAEb,SAAKD,QAAL,CAAc;AAAET,MAAAA,WAAW,EAAEU,CAAC,CAACC,MAAF,CAASC;AAAxB,KAAd;AAED;;AAEDC,EAAAA,MAAM,GAAE;AAEN,UAAM;AAAEd,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA4B,KAAKF,KAAvC,CAFM,CAEwC;;AAE9C,UAAMgB,gBAAgB,GAAGf,QAAQ,CAACgB,MAAT,CAAgBC,OAAO,IAC5CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCnB,WAAW,CAACkB,WAAZ,EAApC,CADqB,CAAzB;AAKA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CACA;AADA;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,YAAY,EAAE,KAAKjB,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAIa,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA9CyB;;AAiD5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nimport {CardList} from './components/card-list/card-list-component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n\n    \n    this.handleChange = this.handleChange.bind(this);\n  }\n// componentDidMount: when component is loaded, do thing.\n  componentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n\n  }\n\n  handleChange(e){\n\n    this.setState({ searchField: e.target.value})\n\n  }\n\n  render(){\n\n    const { monsters, searchField } = this.state; //equivalent to const monsters = this.state.monsters; ect.\n\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n      \n\n    return (\n      <div className=\"App\">\n        <SearchBox \n        //placeholder and handleChange are 'props' and their contents are passed down to the search component\n          placeholder='search Monsters' \n          handleChange={this.handleChange} />\n        <CardList monsters = {filteredMonsters} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}